[workspace]
members = ["crates/*", "eden", "xtask"]
resolver = "2"

[workspace.package]
version = "0.1.0-alpha.0"
authors = ["memothelemo <dev@memothelemo.xyz>"]
edition = "2021"
license = "AGPL-2.0"
rust-version = "1.79.0"

[workspace.dependencies]
# eden crates
eden-bot = { path = "crates/eden-bot" }
eden-schema = { path = "crates/eden-schema" }
eden-settings = { path = "crates/eden-settings" }
eden-tasks = { path = "crates/eden-tasks" }
eden-utils = { path = "crates/eden-utils" }

# types
chrono = { version = "0.4.38", features = ["serde"] }
dashmap = "6.0.1"
rust_decimal = "1.35.0"
serde_json = "1.0.120"
uuid = { version = "1.10.0", features = ["serde", "v4"] }

# core crates
error-stack = { git = "https://github.com/memothelemo/error-stack", rev = "f52d870" }
typed-builder = "0.18.2"

# macros
paste = "1.0.15"
thiserror = "1.0.61"

# user configuration
clap = { version = "4.5.13", features = ["derive"] }
config = { version = "0.14.0", features = ["convert-case", "preserve_order", "toml"], default-features = false }
doku = "0.21.1"
dotenvy = "0.15.7"

# serialization, encoding and compression
fancy-duration = { version = "0.9.2", features = ["chrono"] }
hex = "0.4.3"
serde = { version = "1.0.204", features = ["derive"] }
serde_with = "3.9.0"
sha2 = "0.10.8"

# async related
async-trait = "0.1.80"
futures = "0.3.30"
pin-project-lite = "0.2.14"
tokio = { version = "1.38.0", features = ["full", "tracing"] }
tokio-util = { version = "0.7.11", features = ["full"] }

# tracing/logging
tracing = { version = "0.1.40", features = ["log"] }
tracing-error = "0.2.0"

# twilight crates
twilight-model = "0.15.4"
twilight-interactions = "0.15.2"

# testing
serde_test = "1.0.176"
static_assertions = "1.1.0"

[workspace.dependencies.sqlx]
version = "0.7.4"
features = ["runtime-tokio", "tls-rustls", "postgres", "macros", "migrate", "chrono", "rust_decimal", "json", "uuid"]

[workspace.lints.clippy]
module_name_repetitions = "allow"
must_use_candidate = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
missing_safety_doc = "allow"
wildcard_imports = "allow"

cast_lossless = "deny"
dbg_macro = "deny"
expect_used = "deny"
get_first = "deny"
implicit_clone = "deny"
let_underscore_must_use = "deny"
manual_string_new = "deny"
pedantic = { level = "deny", priority = -1 }
single-match = "deny"
too_many_lines = "deny"
uninlined_format_args = "allow"
unused_self = "deny"
unwrap_used = "deny"

[workspace.lints.rust]
nonstandard_style = "deny"
rust_2018_idioms = "deny"
